{"/home/travis/build/npmtest/node-npmtest-universal-webpack/test.js":"/* istanbul instrument in package npmtest_universal_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-universal-webpack/lib.npmtest_universal_webpack.js":"/* istanbul instrument in package npmtest_universal_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_universal_webpack = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_universal_webpack = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-universal-webpack/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-universal-webpack && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_universal_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_universal_webpack\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_universal_webpack.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_universal_webpack.rollup.js'] =\n            local.assetsDict['/assets.npmtest_universal_webpack.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_universal_webpack.__dirname + '/lib.npmtest_universal_webpack.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/index.common.js":"'use strict'\n\nexports = module.exports =\n{\n\tserver                 : require('./build/server').default,\n\tserver_configuration   : require('./build/server configuration').default,\n\tclient_configuration   : require('./build/client configuration').default,\n\tprepare                : require('./build/prepare').default,\n\tdevtools               : require('./build/devtools').default,\n\tbabel_register_options : require('./build/babel-register').babel_register_options,\n\n\t// for camelCased guys\n\tserverConfiguration    : require('./build/server configuration').default,\n\tclientConfiguration    : require('./build/client configuration').default,\n\tbabelRegisterOptions   : require('./build/babel-register').babel_register_options\n}","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/build/server.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.default = server;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _waitForFile = require('./wait for file');\n\nvar _waitForFile2 = _interopRequireDefault(_waitForFile);\n\nvar _chunks = require('./chunks');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction server(webpack_configuration, settings) {\n\t// if (!webpack_configuration.context)\n\t// {\n\t// \tthrow new Error(`You must set \"context\" parameter in your Webpack configuration`)\n\t// }\n\n\t// Path to `build/server.js`\n\t// (built by Webpack)\n\tvar server_bundle_path = _path2.default.resolve(webpack_configuration.context || process.cwd(), settings.server.output);\n\n\tvar chunk_info_json_file_path = (0, _chunks.chunk_info_file_path)(webpack_configuration, settings.chunk_info_filename);\n\n\t// waits for the first Webpack server-side build to finish and produce `webpage_rendering_server.js`\n\treturn (0, _waitForFile2.default)(server_bundle_path).then(function () {\n\t\treturn (0, _waitForFile2.default)(chunk_info_json_file_path);\n\t}).then(function () {\n\t\t// Will be passed to the server code\n\t\tvar additional = {\n\t\t\tconfiguration: webpack_configuration,\n\n\t\t\tchunks: function chunks() {\n\t\t\t\t// Just in case `nodemon` was not set up to watch and\n\t\t\t\t// restart the Node.js process on bundle rebuild,\n\t\t\t\t// clear Webpack require() cache for hot reload in development mode.\n\t\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\t\tdelete require.cache[chunk_info_json_file_path];\n\t\t\t\t}\n\n\t\t\t\t// In production mode `require()` cache will be in effect\n\t\t\t\treturn require(chunk_info_json_file_path);\n\t\t\t}\n\t\t};\n\n\t\t// Start webpage rendering server\n\t\t// (this module will be compiled by Webpack server-side build from './source/server.js')\n\n\t\tvar starter = require(server_bundle_path);\n\n\t\t// Fixing Babel `module.exports.default` issues\n\n\t\tif (typeof starter === 'function') {\n\t\t\treturn starter(additional);\n\t\t}\n\n\t\tif (typeof starter.default === 'function') {\n\t\t\treturn starter.default(additional);\n\t\t}\n\n\t\tvar stringified_starter = String(starter);\n\t\tif (stringified_starter === '[object Object]') {\n\t\t\tstringified_starter = (0, _stringify2.default)(starter, null, 2);\n\t\t}\n\n\t\tthrow new Error('[universal-webpack] Your server source file must export a function. ' + ('Got ' + _util2.default.inspect(starter)));\n\t}).catch(function (error) {\n\t\t// bright red color\n\t\tconsole.log(\"\\x1b[1m\\x1b[31m\");\n\n\t\t// Output the error stack trace\n\t\tconsole.error('\\n' + (error.stack || error));\n\n\t\t// reset color and brightness\n\t\tconsole.log('\\x1b[39m\\x1b[22m');\n\n\t\t// exit with non-zero exit code (indicating that an error happened)\n\t\tprocess.exit(1);\n\t});\n}\n//# sourceMappingURL=server.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/bin/universal-webpack.js":"#!/usr/bin/env node\n\nvar path = require('path')\nvar fs = require('fs')\n\nvar minimist = require('minimist')\nvar universal_webpack = require('../index.common')\n\nvar command_line_arguments = minimist(process.argv.slice(2))\n\nif (!command_line_arguments.settings)\n{\n\treturn usage('Path to the settings file not specified')\n}\n\nvar settings = require(path.resolve(process.cwd(), command_line_arguments.settings))\n\nvar webpack_configuration\n\nif (command_line_arguments.config)\n{\n\twebpack_configuration = require(path.resolve(process.cwd(), command_line_arguments.config))\n}\n\nif (command_line_arguments._.length === 0)\n{\n\treturn usage('No command specified')\n}\n\nif (command_line_arguments._.length > 1)\n{\n\treturn usage('Invalid input')\n}\n\nvar command = command_line_arguments._[0]\n\nswitch (command)\n{\n\tcase 'prepare':\n\t\tuniversal_webpack.prepare(settings, webpack_configuration)\n\t\tbreak\n\n\tdefault:\n\t\tusage('Unknown command: ' + command)\n}\n\nfunction usage(reason)\n{\n\tif (reason)\n\t{\n\t\tconsole.log(reason)\n\t\tconsole.log('')\n\t}\n\n\tconsole.log('Usage:')\n\tconsole.log('')\n\tconsole.log('universal-webpack --settings ./universal-webpack-settings.js <command>')\n\tconsole.log('')\n\tconsole.log('Commands:')\n\tconsole.log('')\n\tconsole.log('   prepare - Creates (or cleans) the server-side build folder')\n\tconsole.log('             ')\n\tconsole.log('             That\\'s needed because Nodemon, for example,')\n\tconsole.log('             needs the folder to exist by the time it runs,')\n\tconsole.log('             otherwise it won\\'t detect any changes to the code')\n\tconsole.log('             in that \"--watch\"ed folder and therefore won\\'t')\n\tconsole.log('             restart the server on code changes.')\n\tconsole.log('             ')\n\tconsole.log('             An optional --config flag may be specified')\n\tconsole.log('             in which case `context` will be read from this webpack config')\n\tconsole.log('             and will be used to resolve the paths in')\n\tconsole.log('             `./universal-webpack-settings.js` which are resolved')\n\tconsole.log('             from `process.cwd()` by default.')\n\n\tif (reason)\n\t{\n\t\treturn process.exit(1)\n\t}\n\n\tprocess.exit(0)\n}","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/config.js":"'use strict'\n\n// This is an alternative to `import { clientConfiguration, serverConfiguration } from 'universal-webpack'`.\n// https://github.com/halt-hammerzeit/universal-webpack/issues/23#issuecomment-290201907\nexports = module.exports =\n{\n\tserver : require('./build/server configuration').default,\n\tclient : require('./build/client configuration').default\n}","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/build/server configuration.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nexports.default = server_configuration;\nexports.is_external = is_external;\nexports.dont_emit_file_loader = dont_emit_file_loader;\nexports.replace_style_loader = replace_style_loader;\nexports.extract_package_name = extract_package_name;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _webpack = require('webpack');\n\nvar _webpack2 = _interopRequireDefault(_webpack);\n\nvar _validateNpmPackageName = require('validate-npm-package-name');\n\nvar _validateNpmPackageName2 = _interopRequireDefault(_validateNpmPackageName);\n\nvar _helpers = require('./helpers');\n\nvar _loaders = require('./loaders');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Tunes the client-side Webpack configuration for server-side build\nfunction server_configuration(webpack_configuration, settings) {\n\t// if (!webpack_configuration.context)\n\t// {\n\t// \tthrow new Error(`You must set \"context\" parameter in your Webpack configuration`)\n\t// }\n\n\tvar configuration = (0, _helpers.clone)(webpack_configuration);\n\n\t// By default, Webpack sets `context` to `process.cwd()`\n\tconfiguration.context = configuration.context || process.cwd();\n\n\t// (without extension)\n\tvar output_file_name = _path2.default.basename(settings.server.output, _path2.default.extname(settings.server.output));\n\n\tconfiguration.entry = (0, _defineProperty3.default)({}, output_file_name, settings.server.input);\n\n\t// https://webpack.github.io/docs/configuration.html#target\n\tconfiguration.target = 'node';\n\n\t// Tell Webpack to leave `__dirname` and `__filename` unchanged\n\t// https://github.com/webpack/webpack/issues/1599#issuecomment-186841345\n\tconfiguration.node = configuration.node || {};\n\tconfiguration.node.__dirname = false;\n\tconfiguration.node.__filename = false;\n\n\t// https://webpack.github.io/docs/configuration.html#output-librarytarget\n\tconfiguration.output.libraryTarget = 'commonjs2';\n\n\t// No need for browser cache management, so disable hashes in filenames\n\tconfiguration.output.filename = '[name].js';\n\tconfiguration.output.chunkFilename = '[name].js';\n\n\t// Include comments with information about the modules.\n\t// require(/* ./test */23).\n\t// What for is it here? I don't know. It's a copy & paste from the Webpack author's code.\n\tconfiguration.output.pathinfo = true;\n\n\t// Output server bundle into its own directory\n\tconfiguration.output.path = _path2.default.resolve(configuration.context, _path2.default.dirname(settings.server.output));\n\n\t// Output \"*.map\" file for human-readable stack traces\n\tconfiguration.devtool = 'source-map';\n\n\t// https://webpack.github.io/docs/configuration.html#externals\n\t//\n\t// `externals` allows you to specify dependencies for your library\n\t// that are not resolved by webpack, but become dependencies of the output.\n\t// This means they are imported from the environment during runtime.\n\t//\n\t// So that Webpack doesn't bundle \"node_modules\" into server.js.\n\n\tconfiguration.externals = configuration.externals || [];\n\n\tif (!Array.isArray(configuration.externals)) {\n\t\tconfiguration.externals = [configuration.externals];\n\t}\n\n\tconfiguration.externals.push(function (context, request, callback) {\n\t\tif (is_external(request, configuration, settings)) {\n\t\t\t// Resolve dependency as external\n\t\t\treturn callback(null, request);\n\t\t}\n\n\t\t// Resolve dependency as non-external\n\t\treturn callback();\n\t});\n\n\t// Replace `style-loader` and `css-loader` with `css-loader/locals`\n\t// since it's no web browser and no files will be emitted.\n\treplace_style_loader(configuration);\n\n\t// Add `emit: false` flag to `file-loader` and `url-loader`,\n\t// since there's no need out emit files on the server side\n\t// (can just use the assets emitted on client build\n\t//  since the filenames are the same)\n\tdont_emit_file_loader(configuration);\n\n\tconfiguration.plugins = configuration.plugins || [];\n\n\t// Remove HotModuleReplacementPlugin and CommonsChunkPlugin\n\tconfiguration.plugins = configuration.plugins.filter(function (plugin) {\n\t\treturn plugin.constructor !== _webpack2.default.HotModuleReplacementPlugin && plugin.constructor !== _webpack2.default.optimize.CommonsChunkPlugin;\n\t});\n\n\t// Add a couple of utility plugins\n\tconfiguration.plugins = configuration.plugins.concat(\n\t// Resorted from using it here because\n\t// if the `build/server` folder is not there\n\t// when Nodemon starts then it simply won't detect\n\t// updates of the server-side bundle\n\t// and therefore won't restart on code changes.\n\t//\n\t// `build/server` folder needs to be present\n\t// by the time Nodemon starts,\n\t// and that's accomplished with a separate npm script.\n\n\t// // Cleans the output folder\n\t// new clean_plugin([path.dirname(settings.server.output)],\n\t// {\n\t// \troot: configuration.context\n\t// }),\n\n\t// Put the resulting Webpack compiled code into a sigle javascript file\n\t// (doesn't disable CommonsChunkPlugin)\n\tnew _webpack2.default.optimize.LimitChunkCountPlugin({ maxChunks: 1 }));\n\n\t// Done\n\treturn configuration;\n}\n\n// Checks if a require()d dependency is external\nfunction is_external(request, webpack_configuration, settings) {\n\t// If someone finds a way to mark all assets (jpg, png, css, scss)\n\t// as not external then create a Pull Request on github.\n\t// Until then, all assets from `node_modules` have to be specified\n\t// inside `exclude_from_externals` configuration parameter.\n\n\t// Mark all files inside packages (e.g. `node_modules`) as external.\n\n\tvar package_name = extract_package_name(request);\n\n\t// Skip webpack loader specific require()d paths\n\t// https://webpack.github.io/docs/loaders.html\n\tif ((0, _helpers.starts_with)(package_name, '!') || (0, _helpers.starts_with)(package_name, '-!')) {\n\t\t// The dependency is not external\n\t\treturn false;\n\t}\n\n\t// If it's not a module require call,\n\t// then resolve it as non-external.\n\t//\n\t// https://github.com/npm/validate-npm-package-name\n\t//\n\tif (!(0, _validateNpmPackageName2.default)(package_name).validForNewPackages) {\n\t\t// The dependency is not external\n\t\treturn false;\n\t}\n\n\t// If any aliases are specified, then resolve those aliases as non-external\n\tif (webpack_configuration.resolve && webpack_configuration.resolve.alias) {\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = (0, _getIterator3.default)((0, _keys2.default)(webpack_configuration.resolve.alias)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar alias = _step.value;\n\n\t\t\t\t// if (request === key || starts_with(request, key + '/'))\n\t\t\t\tif (package_name === alias) {\n\t\t\t\t\t// The module is not external\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Allows camelCasing\n\tvar exclude_from_externals = settings.exclude_from_externals || settings.excludeFromExternals;\n\n\t// Skip modules explicitly ignored by the user\n\tif (exclude_from_externals) {\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = (0, _getIterator3.default)(exclude_from_externals), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar exclusion_pattern = _step2.value;\n\n\t\t\t\tvar regexp = exclusion_pattern;\n\n\t\t\t\tif (typeof exclusion_pattern === 'string') {\n\t\t\t\t\tif (request === exclusion_pattern || (0, _helpers.starts_with)(request, exclusion_pattern + '/')) {\n\t\t\t\t\t\t// The module is not external\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (exclusion_pattern instanceof RegExp) {\n\t\t\t\t\tif (regexp.test(request)) {\n\t\t\t\t\t\t// The module is not external\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Invalid exclusion pattern: ' + exclusion_pattern + '. Only strings and regular expressions are allowed.');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// The module is external\n\treturn true;\n}\n\n// Adds `emitFile: false` flag to `file-loader` and `url-loader`,\n// since there's no need out emit files on the server side\n// (can just use the assets emitted on client build\n//  since the filenames are the same)\nfunction dont_emit_file_loader(configuration) {\n\tvar _iteratorNormalCompletion3 = true;\n\tvar _didIteratorError3 = false;\n\tvar _iteratorError3 = undefined;\n\n\ttry {\n\t\tfor (var _iterator3 = (0, _getIterator3.default)(configuration.module.rules), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\tvar rule = _step3.value;\n\n\t\t\t(0, _loaders.normalize_rule_loaders)(rule);\n\n\t\t\tvar file_loader = rule.use.filter((0, _loaders.loader_name_filter)('file'))[0];\n\t\t\tvar url_loader = rule.use.filter((0, _loaders.loader_name_filter)('url'))[0];\n\n\t\t\tif (file_loader && url_loader) {\n\t\t\t\tthrow new Error('You have both \"url-loader\" and \"file-loader\" defined for rule which makes no sense', _util2.default.inspect(rule));\n\t\t\t}\n\n\t\t\tvar loader = file_loader || url_loader;\n\n\t\t\tif (loader) {\n\t\t\t\tloader.options = loader.options || {};\n\t\t\t\tloader.options.emitFile = false;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError3 = true;\n\t\t_iteratorError3 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t_iterator3.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError3) {\n\t\t\t\tthrow _iteratorError3;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Replaces `style-loader` and `css-loader` with `css-loader/locals`\n// since it's no web browser and no files will be emitted.\nfunction replace_style_loader(configuration) {\n\tvar _iteratorNormalCompletion4 = true;\n\tvar _didIteratorError4 = false;\n\tvar _iteratorError4 = undefined;\n\n\ttry {\n\t\tfor (var _iterator4 = (0, _getIterator3.default)((0, _loaders.find_style_rules)(configuration)), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\tvar rule = _step4.value;\n\n\t\t\t(0, _loaders.normalize_rule_loaders)(rule);\n\n\t\t\t// Replace `css-loader` with `css-loader/locals`.\n\t\t\t// Remove `style-loader`.\n\t\t\tvar css_loader = rule.use.filter((0, _loaders.loader_name_filter)('css'))[0];\n\n\t\t\tif (css_loader) {\n\t\t\t\tcss_loader.loader = 'css-loader/locals';\n\t\t\t\trule.use = rule.use.filter(function (loader) {\n\t\t\t\t\treturn !(0, _loaders.loader_name_filter)('style')(loader);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError4 = true;\n\t\t_iteratorError4 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t_iterator4.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError4) {\n\t\t\t\tthrow _iteratorError4;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Extracts npm package name.\n// Correctly handles \"private\" npm packages like `@namespace/package`.\nfunction extract_package_name(path) {\n\tif (path.indexOf('/') === -1) {\n\t\treturn path;\n\t}\n\n\t// For regular npm packages\n\tvar package_name = path.slice(0, path.indexOf('/'));\n\n\t// Handle \"private\" npm packages\n\tif (package_name[0] === '@') {\n\t\tvar start_from = package_name.length + '/'.length;\n\t\tvar to = path.indexOf('/', start_from);\n\n\t\tif (to >= 0) {\n\t\t\tpackage_name += path.slice(start_from - '/'.length, to);\n\t\t} else {\n\t\t\tpackage_name = path;\n\t\t}\n\t}\n\n\treturn package_name;\n}\n//# sourceMappingURL=server configuration.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/server.js":"'use strict'\n\n// This is an alternative to `import { server } from 'universal-webpack'`.\n// https://github.com/halt-hammerzeit/universal-webpack/issues/23#issuecomment-290201907\nexports = module.exports = require('./build/server').default","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/babel-register.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.babel_register_options = babel_register_options;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// For some weird reason Babel `filename` has posix slashes\n// instead of standard Windows slashes on Windows operating system.\nvar node_modules = _path2.default.posix.sep + 'node_modules' + _path2.default.posix.sep;\n\n// Exclude `node_modules` anywhere in the path,\n// and also the server-side bundle output by `universal-webpack`.\n//\n// Babel excludes all `node_modules` by default,\n// so by overriding the default `ignore` behavior\n// the `node_modules` exclusion feature must be duplicated.\n// https://github.com/babel/babel/blob/c8bd9e3ffb23e216d92fb70188fcf105381b8bb8/packages/babel-register/src/node.js#L90-L96\n//\n// Excluding the server-side bundle is said to speed up things a bit.\n// https://github.com/halt-hammerzeit/webpack-react-redux-isomorphic-render-example/issues/5\n//\nfunction babel_register_options(universal_webpack_settings, webpack_configuration) {\n\tvar server_side_bundle_path = _path2.default.resolve(webpack_configuration.context, universal_webpack_settings.server.output);\n\n\t// For some weird reason Babel `filename` has posix slashes\n\t// instead of standard Windows slashes on Windows operating system.\n\tserver_side_bundle_path = server_side_bundle_path.replace(/\\\\/g, _path2.default.posix.sep);\n\n\t// `babel-register` options\n\tvar options = {\n\t\tignore: function ignore(filename) {\n\t\t\t// Ignore all `node_modules` folders\n\t\t\tif (filename.indexOf(node_modules) >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Ignore the server-side bundle\n\t\t\tif (filename === server_side_bundle_path) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t};\n\n\treturn options;\n}\n//# sourceMappingURL=babel-register.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/chunks.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.chunk_info_file_path = chunk_info_file_path;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction chunk_info_file_path(webpack_configuration, chunk_info_filename) {\n\treturn _path2.default.join(webpack_configuration.output.path, chunk_info_filename || 'webpack-chunks.json');\n}\n//# sourceMappingURL=chunks.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/chunks plugin.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.default = Chunk_file_names_plugin;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fsExtra = require('fs-extra');\n\nvar _fsExtra2 = _interopRequireDefault(_fsExtra);\n\nvar _outputWebpackStats = require('./output webpack stats');\n\nvar _outputWebpackStats2 = _interopRequireDefault(_outputWebpackStats);\n\nvar _chunks = require('./chunks');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Chunk_file_names_plugin(configuration, options) {\n\tthis.configuration = configuration;\n\tthis.options = options;\n}\n\nChunk_file_names_plugin.prototype.apply = function (compiler) {\n\t// // Webpack configuration\n\t// // (has wrong `output.path` at this point\n\t// //  so `output.path` has to be passed when constructing an instance)\n\t// const webpack_configuration = compiler.options\n\tvar webpack_configuration = this.configuration;\n\n\tvar options = this.options;\n\n\t// chunk filename info file path\n\tvar output_file_path = (0, _chunks.chunk_info_file_path)(webpack_configuration, options.chunk_info_filename);\n\n\t// when all is done\n\t// https://github.com/webpack/docs/wiki/plugins\n\tcompiler.plugin('done', function (stats) {\n\t\tvar json = stats.toJson({\n\t\t\tcontext: webpack_configuration.context || process.cwd(),\n\n\t\t\t// Add built modules information to chunk information.\n\t\t\t// What for is it here? I don't know. It's a copy & paste from the Webpack author's code.\n\t\t\tchunkModules: true\n\n\t\t});\n\n\t\t// output some info to the console if in development mode\n\t\t// // The following modules will be excluded from Webpack stats Json file.\n\t\t// // What for is it here? I don't know. It's a copy & paste from the Webpack author's code.\n\t\t// exclude:\n\t\t// [\n\t\t// \t/node_modules[\\\\\\/]react(-router)?[\\\\\\/]/,\n\t\t// \t/node_modules[\\\\\\/]items-store[\\\\\\/]/\n\t\t// ]\n\t\tif (!options.silent) {\n\t\t\t// outputs stats info to the console\n\t\t\t// (only needed in development mode)\n\t\t\t(0, _outputWebpackStats2.default)(stats, json);\n\t\t}\n\n\t\t// \"publicPath\" (will be prepended to chunk file names)\n\t\tvar assets_base_url = process.env.NODE_ENV !== 'production' && webpack_configuration.devServer && webpack_configuration.devServer.publicPath ? webpack_configuration.devServer.publicPath : json.publicPath;\n\n\t\t// Generate chunk filename info\n\t\tvar chunk_filename_info = filename_info(json, assets_base_url);\n\n\t\t// Write chunk filename info to disk\n\t\t_fsExtra2.default.outputFileSync(output_file_path, (0, _stringify2.default)(chunk_filename_info));\n\t});\n};\n\n// Generates chunk filename info\n// (`assets_base_url` will be prepended to chunk file names)\nfunction filename_info(json, assets_base_url) {\n\tvar assets_by_chunk = json.assetsByChunkName;\n\n\tvar assets_chunks = {\n\t\tjavascript: {},\n\t\tstyles: {}\n\t};\n\n\t// gets asset paths by name and extension of their chunk\n\tfunction get_assets(name, extension) {\n\t\tvar chunk = json.assetsByChunkName[name];\n\n\t\t// a chunk could be a string or an array, so make sure it is an array\n\t\tif (!Array.isArray(chunk)) {\n\t\t\tchunk = [chunk];\n\t\t}\n\n\t\treturn chunk\n\t\t// filter by extension\n\t\t.filter(function (name) {\n\t\t\treturn _path2.default.extname(name) === '.' + extension;\n\t\t})\n\t\t// adjust the real path (can be http, filesystem)\n\t\t.map(function (name) {\n\t\t\treturn assets_base_url + name;\n\t\t});\n\t}\n\n\t// for each chunk name (\"main\", \"common\", ...)\n\t(0, _keys2.default)(assets_by_chunk).forEach(function (name) {\n\t\t// log.debug(`getting javascript and styles for chunk \"${name}\"`)\n\n\t\t// get javascript chunk real file path\n\n\t\tvar javascript = get_assets(name, 'js')[0];\n\t\t// the second asset is usually a source map\n\n\t\tif (javascript) {\n\t\t\t// log.debug(` (got javascript)`)\n\t\t\tassets_chunks.javascript[name] = javascript;\n\t\t}\n\n\t\t// get style chunk real file path\n\n\t\tvar style = get_assets(name, 'css')[0];\n\t\t// the second asset is usually a source map\n\n\t\tif (style) {\n\t\t\t// log.debug(` (got style)`)\n\t\t\tassets_chunks.styles[name] = style;\n\t\t}\n\t});\n\n\treturn assets_chunks;\n}\n//# sourceMappingURL=chunks plugin.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/client configuration.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = client_configuration;\n\nvar _extractTextWebpackPlugin = require('extract-text-webpack-plugin');\n\nvar _extractTextWebpackPlugin2 = _interopRequireDefault(_extractTextWebpackPlugin);\n\nvar _chunksPlugin = require('./chunks plugin');\n\nvar _chunksPlugin2 = _interopRequireDefault(_chunksPlugin);\n\nvar _helpers = require('./helpers');\n\nvar _loaders = require('./loaders');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction client_configuration(webpack_configuration, settings) {\n\tvar options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n\tvar configuration = (0, _helpers.clone)(webpack_configuration);\n\n\tconfiguration.plugins = configuration.plugins || [];\n\n\tconfiguration.plugins.push(\n\t// Add chunk filename info plugin\n\t//\n\t// Writes client-side build chunks filename info\n\t// for later use inside server-side rendering code\n\t// (`<script src=.../>` and `<link rel=\"style\" href=.../>` tags)\n\t//\n\t// Cloning Webpack configuration here\n\t// because `webpack-dev-server` seems to alter it\n\t// by changing the already predefined `.output.path`.\n\t//\n\tnew _chunksPlugin2.default((0, _helpers.clone)(configuration), { silent: settings.silent, chunk_info_filename: settings.chunk_info_filename }));\n\n\t// Not sure about the name yet\n\t// // Normalize legacy options\n\t// if (options.css_bundle)\n\t// {\n\t// \tconsole.warn(\"`css_bundle` option is now called `extract_styles`\")\n\t// \toptions.extract_styles = options.css_bundle\n\t// \tdelete options.css_bundle\n\t// }\n\n\t// If it's a client-side development webpack build,\n\t// and CSS bundle extraction is enabled,\n\t// then extract all CSS styles into a file.\n\t// (without removing them from the code)\n\tif (options.development && options.css_bundle) {\n\t\tvar css_bundle_filename = '[name]-[contenthash].css';\n\n\t\tif (typeof options.css_bundle === 'string') {\n\t\t\tcss_bundle_filename = options.css_bundle;\n\t\t}\n\n\t\t// Extract styles into a file\n\t\t// (without removing them from the code in this case).\n\t\t//\n\t\t// It copies contents of each `require(\"style.css\")`\n\t\t// into one big CSS file on disk\n\t\t// which will be later read on the server-side\n\t\t// and inserted into `<head><style></style></head>`,\n\t\t// so that in development mode there's no\n\t\t// \"flash of unstyled content\" on page reload.\n\t\t//\n\t\t// \"allChunks: true\" option means that the styles from all chunks\n\t\t// (think \"entry points\") will be extracted into a single big CSS file.\n\t\t//\n\t\tvar extract_css = new _extractTextWebpackPlugin2.default({\n\t\t\tfilename: css_bundle_filename,\n\t\t\tallChunks: true\n\t\t});\n\n\t\t// Find module loaders with `style-loader`,\n\t\t// and set those module loaders to `extract-text-webpack-plugin` loader\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = (0, _getIterator3.default)((0, _loaders.find_style_rules)(configuration)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar rule = _step.value;\n\n\t\t\t\t(0, _loaders.normalize_rule_loaders)(rule);\n\n\t\t\t\tvar style_loader = rule.use.filter((0, _loaders.loader_name_filter)('style'))[0];\n\n\t\t\t\tvar before_style_loader = rule.use.slice(0, rule.use.indexOf(style_loader));\n\t\t\t\tvar after_style_loader = rule.use.slice(rule.use.indexOf(style_loader) + 1);\n\n\t\t\t\t// The first argument to the .extract() function is the name of the loader\n\t\t\t\t// (\"style-loader\" in this case) to be applied to non-top-level-chunks in case of \"allChunks: false\" option.\n\t\t\t\t// since in this configuration \"allChunks: true\" option is used, this first argument is irrelevant.\n\t\t\t\t//\n\t\t\t\t// `remove: false` ensures that the styles being extracted\n\t\t\t\t// aren't erased from the chunk javascript file.\n\t\t\t\t//\n\t\t\t\t// I'm also prepending another `style-loader` here\n\t\t\t\t// to re-enable adding these styles to the <head/> of the page on-the-fly.\n\n\t\t\t\tvar extract_css_loader = extract_css.extract({\n\t\t\t\t\tremove: false,\n\t\t\t\t\tfallback: before_style_loader,\n\t\t\t\t\tuse: after_style_loader\n\t\t\t\t});\n\n\t\t\t\t// https://github.com/webpack-contrib/extract-text-webpack-plugin/issues/368\n\t\t\t\tif (Array.isArray(extract_css_loader)) {\n\t\t\t\t\trule.use = [{\n\t\t\t\t\t\tloader: 'style-loader'\n\t\t\t\t\t}].concat((0, _toConsumableArray3.default)(extract_css_loader));\n\t\t\t\t} else {\n\t\t\t\t\trule.use = [{\n\t\t\t\t\t\tloader: 'style-loader'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tloader: extract_css_loader\n\t\t\t\t\t}];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the `extract-text-webpack-plugin` to the list of plugins.\n\t\t\t// It will extract all CSS into a file\n\t\t\t// (without removing it from the code in this case)\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconfiguration.plugins.push(extract_css);\n\t}\n\n\t// Use `extract-text-webpack-plugin`\n\t// to extract all CSS into a separate file\n\t// (in production)\n\tif (options.development === false && options.css_bundle !== false) {\n\t\tvar _css_bundle_filename = '[name]-[contenthash].css';\n\n\t\tif (typeof options.css_bundle === 'string') {\n\t\t\t_css_bundle_filename = options.css_bundle;\n\t\t}\n\n\t\t// Extract styles into a file\n\t\t// (removing them from the code in this case).\n\t\t//\n\t\t// It moves contents of each `require(\"style.css\")`\n\t\t// into one big CSS file on disk\n\t\t// which will be later read on the server-side\n\t\t// and inserted into `<head><style></style></head>`.\n\t\t//\n\t\t// \"allChunks: true\" option means that the styles from all chunks\n\t\t// (think \"entry points\") will be extracted into a single big CSS file.\n\t\t//\n\t\tvar _extract_css = new _extractTextWebpackPlugin2.default({\n\t\t\tfilename: _css_bundle_filename,\n\t\t\tallChunks: true\n\t\t});\n\n\t\t// Find module loaders with `style-loader`,\n\t\t// and set those module loaders to `extract-text-webpack-plugin` loader\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = (0, _getIterator3.default)((0, _loaders.find_style_rules)(configuration)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar _rule = _step2.value;\n\n\t\t\t\t(0, _loaders.normalize_rule_loaders)(_rule);\n\n\t\t\t\tvar _style_loader = _rule.use.filter((0, _loaders.loader_name_filter)('style'))[0];\n\n\t\t\t\tvar style_loader_and_before = _rule.use.slice(0, _rule.use.indexOf(_style_loader) + 1);\n\t\t\t\tvar _after_style_loader = _rule.use.slice(_rule.use.indexOf(_style_loader) + 1);\n\n\t\t\t\t// The first argument to the .extract() function is the name of the loader\n\t\t\t\t// (\"style-loader\" in this case) to be applied to non-top-level-chunks in case of \"allChunks: false\" option.\n\t\t\t\t// since in this configuration \"allChunks: true\" option is used, this first argument is irrelevant.\n\n\t\t\t\tvar _extract_css_loader = _extract_css.extract({\n\t\t\t\t\tfallback: style_loader_and_before,\n\t\t\t\t\tuse: _after_style_loader\n\t\t\t\t});\n\n\t\t\t\tif (Array.isArray(_extract_css_loader)) {\n\t\t\t\t\t_rule.use = _extract_css_loader;\n\t\t\t\t} else {\n\t\t\t\t\t_rule.loader = _extract_css_loader;\n\t\t\t\t\tdelete _rule.use;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the `extract-text-webpack-plugin` to the list of plugins.\n\t\t\t// It will extract all CSS into a file\n\t\t\t// (removing it from the code in this case)\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconfiguration.plugins.push(_extract_css);\n\t}\n\n\t// Done\n\treturn configuration;\n}\n//# sourceMappingURL=client configuration.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/devtools.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = devtools;\n// The following code is an advanced topic\n// and can be skipped safely.\n// This code is not required\n// for the whole thing to work.\n// It's gonna work fine without this code.\n//\n// (in development mode)\n//\n// Removing the now unnecessary `<link rel=\"stylesheet\"/>` tag,\n// because the client-side javascript has already kicked-in\n// and added all the styles using `style-loader` dynamically.\n//\n// Should that stylesheet be removed at all?\n// Not necessarily.\n// It's just, for example, if a developer opens the page,\n// then decides to remove some CSS class,\n// and switches back to the browser,\n// and the CSS class is still there,\n// because it was only removed from dynamically added CSS styles,\n// not the statically added ones on the server-side.\n//\nfunction devtools(parameters) {\n\tvar chunks = parameters.chunks();\n\n\tvar style_url = chunks.styles[parameters.entry];\n\tvar common_style_url = chunks.styles.common;\n\n\tvar get_style_link_element_script = function get_style_link_element_script(url) {\n\t\treturn 'document.querySelector(\\'head > link[rel=\"stylesheet\"][href=\"' + url + '\"]\\')';\n\t};\n\n\tvar script = '\\n\\t\\tdocument.addEventListener(\\'DOMContentLoaded\\', function(event)\\n\\t\\t{\\n\\t\\t\\t// The style-loader has already added <link/>s \\n\\t\\t\\t// to its dynamic hot-reloadable styles,\\n\\t\\t\\t// so remove the <link/> to the static CSS bundle\\n\\t\\t\\t// inserted during server side page rendering.\\n\\t\\t\\t\\n\\t\\t\\tvar stylesheet\\n\\t\\t\\tvar common_stylesheet\\n\\n\\t\\t\\t' + (style_url ? 'stylesheet        = ' + get_style_link_element_script(style_url) : '') + '\\n\\t\\t\\t' + (common_style_url ? 'common_stylesheet = ' + get_style_link_element_script(common_style_url) : '') + '\\n\\n\\t\\t\\t// Waits a \"magical\" time amount of one second\\n\\t\\t\\t// for the dynamically added stylesheets\\n\\t\\t\\t// to be parsed and applied to the page.\\n\\t\\t\\tsetTimeout(function()\\n\\t\\t\\t{\\n\\t\\t\\t\\tstylesheet        && stylesheet.parentNode.removeChild(stylesheet)\\n\\t\\t\\t\\tcommon_stylesheet && common_stylesheet.parentNode.removeChild(common_stylesheet)\\n\\t\\t\\t},\\n\\t\\t\\t1000)\\n\\t\\t})\\n\\t';\n\n\treturn script;\n}\n//# sourceMappingURL=devtools.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/helpers.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.exists = undefined;\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.is_object = is_object;\nexports.extend = extend;\nexports.merge = merge;\nexports.clone = clone;\nexports.starts_with = starts_with;\nexports.ends_with = ends_with;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// // if the variable is defined\nvar exists = exports.exists = function exists(what) {\n\treturn typeof what !== 'undefined';\n};\n\n// used for JSON object type checking\nvar object_constructor = {}.constructor;\n\n// detects a JSON object\nfunction is_object(object) {\n\treturn exists(object) && object !== null && object.constructor === object_constructor;\n}\n\n// extends the first object with\n/* istanbul ignore next: some weird transpiled code, not testable */\nfunction extend() {\n\tfor (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n\t\tobjects[_key] = arguments[_key];\n\t}\n\n\tobjects = objects.filter(function (x) {\n\t\treturn exists(x);\n\t});\n\n\tif (objects.length === 0) {\n\t\treturn;\n\t}\n\n\tif (objects.length === 1) {\n\t\treturn objects[0];\n\t}\n\n\tvar to = objects[0];\n\tvar from = objects[1];\n\n\tif (objects.length > 2) {\n\t\tvar last = objects.pop();\n\t\tvar intermediary_result = extend.apply(this, objects);\n\t\treturn extend(intermediary_result, last);\n\t}\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = (0, _getIterator3.default)((0, _keys2.default)(from)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar key = _step.value;\n\n\t\t\tif (is_object(from[key])) {\n\t\t\t\tif (!is_object(to[key])) {\n\t\t\t\t\tto[key] = {};\n\t\t\t\t}\n\n\t\t\t\textend(to[key], from[key]);\n\t\t\t} else if (Array.isArray(from[key])) {\n\t\t\t\tif (!Array.isArray(to[key])) {\n\t\t\t\t\tto[key] = [];\n\t\t\t\t}\n\n\t\t\t\tto[key] = to[key].concat(clone(from[key]));\n\t\t\t} else {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n}\n\nfunction merge() {\n\tvar parameters = Array.prototype.slice.call(arguments, 0);\n\tparameters.unshift({});\n\treturn extend.apply(this, parameters);\n}\n\nfunction clone(object) {\n\tif (is_object(object)) {\n\t\treturn merge({}, object);\n\t} else if (Array.isArray(object)) {\n\t\treturn object.map(function (x) {\n\t\t\treturn clone(x);\n\t\t});\n\t} else {\n\t\treturn object;\n\t}\n}\n\nfunction starts_with(string, substring) {\n\tvar j = substring.length;\n\n\tif (j > string.length) {\n\t\treturn false;\n\t}\n\n\twhile (j > 0) {\n\t\tj--;\n\n\t\tif (string[j] !== substring[j]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction ends_with(string, substring) {\n\tvar i = string.length;\n\tvar j = substring.length;\n\n\tif (j > i) {\n\t\treturn false;\n\t}\n\n\twhile (j > 0) {\n\t\ti--;\n\t\tj--;\n\n\t\tif (string[i] !== substring[j]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n\n\t// const index = string.lastIndexOf(substring)\n\t// return index >= 0 && index === string.length - substring.length\n}\n//# sourceMappingURL=helpers.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/loaders.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.find_style_rules = find_style_rules;\nexports.parse_loader = parse_loader;\nexports.stringify_loader = stringify_loader;\nexports.loader_name_filter = loader_name_filter;\nexports.normalize_rule_loaders = normalize_rule_loaders;\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _querystring = require('querystring');\n\nvar _querystring2 = _interopRequireDefault(_querystring);\n\nvar _helpers = require('./helpers');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// https://webpack.js.org/configuration/module/\n\n// Finds module loaders with `style-loader`\nfunction find_style_rules(configuration) {\n\t// Sanity check\n\tif (!configuration.module.rules) {\n\t\tthrow new Error('No `module.rules` found in Webpack configuration. Migrate your configuration to Webpack 2: https://webpack.js.org/guides/migrating/');\n\t}\n\n\treturn configuration.module.rules.filter(function (rule) {\n\t\tnormalize_rule_loaders(rule);\n\n\t\t// Check if this module loader has a `style-loader`\n\t\tvar style_loader = rule.use.filter(loader_name_filter('style'))[0];\n\n\t\t// Is it `extract-text-webpack-plugin` loader\n\t\tvar extract_text_plugin_loader = rule.use.filter(function (loader) {\n\t\t\treturn loader.loader.indexOf('extract-text-webpack-plugin/loader.js') >= 0;\n\t\t})[0];\n\n\t\treturn style_loader && !extract_text_plugin_loader;\n\t});\n}\n\n// Converts loader string into a Webpack 2 loader structure\nfunction parse_loader(loader) {\n\tvar name = void 0;\n\tvar options = void 0;\n\n\tif ((0, _helpers.is_object)(loader)) {\n\t\tif (!loader.loader) {\n\t\t\tthrow new Error('.loader not set for a used loader');\n\t\t}\n\n\t\tvar parsed = parse_loader(loader.loader);\n\n\t\tname = parsed.loader;\n\t\toptions = parsed.options || loader.query || loader.options;\n\n\t\tif (typeof options === 'string') {\n\t\t\toptions = _querystring2.default.parse(options);\n\t\t}\n\t} else {\n\t\tname = loader;\n\n\t\tif (name.indexOf('?') >= 0) {\n\t\t\tname = name.substring(0, name.indexOf('?'));\n\t\t\toptions = _querystring2.default.parse(loader.substring(loader.indexOf('?') + 1));\n\t\t}\n\t}\n\n\tvar result = {\n\t\tloader: name\n\t};\n\n\tif (options) {\n\t\tresult.options = options;\n\t}\n\n\treturn result;\n}\n\n// Converts loader info into a string\nfunction stringify_loader(loader) {\n\treturn loader.loader + (loader.options ? '?' + _querystring2.default.stringify(loader.options) : '');\n}\n\n// Checks if the passed loader is `style-loader`\nfunction loader_name_filter(loader_name) {\n\treturn function (loader) {\n\t\tvar parsed = parse_loader(loader);\n\n\t\tvar name = parsed.loader;\n\n\t\tif ((0, _helpers.ends_with)(name, '-loader')) {\n\t\t\tname = name.substring(0, name.lastIndexOf('-loader'));\n\t\t}\n\n\t\treturn name === loader_name;\n\t};\n}\n\n// Converts `loader` to `loaders`\nfunction normalize_rule_loaders(rule) {\n\t// Convert `loaders` to `use`\n\tif (rule.loaders) {\n\t\trule.use = rule.loaders;\n\t\tdelete rule.loaders;\n\t}\n\n\t// If a `loader` shorthand is used, convert it to `use`\n\tif (rule.loader) {\n\t\tvar loaders = rule.loader.split('!');\n\n\t\tif (rule.query || rule.options) {\n\t\t\tvar parsed_loader = parse_loader(loaders[0]);\n\n\t\t\tif (loaders.length > 1 || parsed_loader.options) {\n\t\t\t\tthrow new Error('You have both a compound \".loader\" and a \".query\" (or an \".options\") property set up directly inside a module rule: ' + _util2.default.inspect(rule) + '. Rewrite it either using \".loaders\" or \".use\".');\n\t\t\t}\n\n\t\t\tloaders = [parsed_loader];\n\n\t\t\tparsed_loader.options = rule.query || rule.options;\n\t\t\tdelete rule.query;\n\t\t\tdelete rule.options;\n\t\t}\n\n\t\trule.use = loaders;\n\t\tdelete rule.loader;\n\t}\n\n\tif (!rule.use) {\n\t\tthrow new Error('Neither \"loaders\" nor \"loader\" nor \"use\" are present inside a module rule: ' + _util2.default.inspect(rule));\n\t}\n\n\tif (typeof rule.use === 'string') {\n\t\trule.use = [rule.use];\n\t}\n\n\tif (!Array.isArray(rule.use)) {\n\t\tthrow new Error('Invalid Webpack configuration: \"rule.use\" must be an array:\\n\\n' + (0, _stringify2.default)(rule, null, 2) + '\\n\\nSee https://webpack.js.org/configuration/module/#rule-use');\n\t}\n\n\trule.use = rule.use.map(parse_loader);\n}\n//# sourceMappingURL=loaders.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/output webpack stats.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = output_webpack_stats;\n\nvar _safe = require('colors/safe');\n\nvar _safe2 = _interopRequireDefault(_safe);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction error(error) {\n\tconsole.error(_safe2.default.red(error));\n} // outputs webpack stats to console if there are no errors or warnings\n\nfunction warning(warning) {\n\tconsole.log(_safe2.default.yellow(warning));\n}\n\nvar first_run = true;\nvar was_faulty = false;\n\nfunction output_webpack_stats(stats, json, verbose) {\n\t// if there were any errors\n\tif (json.errors.length > 0) {\n\t\twas_faulty = true;\n\t\treturn json.errors.forEach(error);\n\t}\n\n\t// if there were any warnings\n\tif (json.warnings.length > 0) {\n\t\tjson.warnings.forEach(warning);\n\t}\n\n\t// if it's ok\n\n\tif (!verbose && !first_run && was_faulty) {\n\t\t// green colour\n\t\tconsole.log(_safe2.default.green('~ Webpack build status: OK ~'));\n\n\t\twas_faulty = false;\n\t}\n\n\tif (verbose || first_run) {\n\t\tconsole.log(stats.toString({\n\t\t\tchunks: false,\n\t\t\tcolors: true\n\t\t}));\n\n\t\tfirst_run = false;\n\t}\n}\n//# sourceMappingURL=output webpack stats.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/prepare.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = prepare;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fsExtra = require('fs-extra');\n\nvar _fsExtra2 = _interopRequireDefault(_fsExtra);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Creates (or cleans) the server-side build folder.\n//\n// That's needed because Nodemon, for example,\n// needs the folder to exist by the time it runs,\n// otherwise it won't detect any changes to the code\n// and therefore won't restart on code changes.\n//\nfunction prepare(settings, webpack_configuration) {\n\t// By default, Webpack sets `context` to `process.cwd()`\n\tvar base_path = webpack_configuration && webpack_configuration.context || process.cwd();\n\n\tif (!settings.server.output) {\n\t\tthrow new Error('`settings.server.output` not specified');\n\t}\n\n\tvar server_build_bundle_path = _path2.default.resolve(base_path, settings.server.output);\n\tvar server_build_folder = _path2.default.dirname(server_build_bundle_path);\n\n\t// Extra caution to prevent data loss\n\tif (server_build_folder === _path2.default.normalize(base_path)) {\n\t\tthrow new Error('`settings.server.output` \"' + server_build_folder + '\" points to the project root folder. Won\\'t clear that folder to prevent accidental data loss.');\n\t}\n\n\t// Extra caution to prevent data loss\n\tif (server_build_folder.indexOf(base_path) !== 0) {\n\t\tthrow new Error('`settings.server.output` \"' + server_build_folder + '\" points outside of the project root folder \"' + base_path + '\". Won\\'t clear that folder to prevent accidental data loss');\n\t}\n\n\t_fsExtra2.default.emptyDirSync(server_build_folder);\n}\n//# sourceMappingURL=prepare.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/server configuration.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nexports.default = server_configuration;\nexports.is_external = is_external;\nexports.dont_emit_file_loader = dont_emit_file_loader;\nexports.replace_style_loader = replace_style_loader;\nexports.extract_package_name = extract_package_name;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _webpack = require('webpack');\n\nvar _webpack2 = _interopRequireDefault(_webpack);\n\nvar _validateNpmPackageName = require('validate-npm-package-name');\n\nvar _validateNpmPackageName2 = _interopRequireDefault(_validateNpmPackageName);\n\nvar _helpers = require('./helpers');\n\nvar _loaders = require('./loaders');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Tunes the client-side Webpack configuration for server-side build\nfunction server_configuration(webpack_configuration, settings) {\n\t// if (!webpack_configuration.context)\n\t// {\n\t// \tthrow new Error(`You must set \"context\" parameter in your Webpack configuration`)\n\t// }\n\n\tvar configuration = (0, _helpers.clone)(webpack_configuration);\n\n\t// By default, Webpack sets `context` to `process.cwd()`\n\tconfiguration.context = configuration.context || process.cwd();\n\n\t// (without extension)\n\tvar output_file_name = _path2.default.basename(settings.server.output, _path2.default.extname(settings.server.output));\n\n\tconfiguration.entry = (0, _defineProperty3.default)({}, output_file_name, settings.server.input);\n\n\t// https://webpack.github.io/docs/configuration.html#target\n\tconfiguration.target = 'node';\n\n\t// Tell Webpack to leave `__dirname` and `__filename` unchanged\n\t// https://github.com/webpack/webpack/issues/1599#issuecomment-186841345\n\tconfiguration.node = configuration.node || {};\n\tconfiguration.node.__dirname = false;\n\tconfiguration.node.__filename = false;\n\n\t// https://webpack.github.io/docs/configuration.html#output-librarytarget\n\tconfiguration.output.libraryTarget = 'commonjs2';\n\n\t// No need for browser cache management, so disable hashes in filenames\n\tconfiguration.output.filename = '[name].js';\n\tconfiguration.output.chunkFilename = '[name].js';\n\n\t// Include comments with information about the modules.\n\t// require(/* ./test */23).\n\t// What for is it here? I don't know. It's a copy & paste from the Webpack author's code.\n\tconfiguration.output.pathinfo = true;\n\n\t// Output server bundle into its own directory\n\tconfiguration.output.path = _path2.default.resolve(configuration.context, _path2.default.dirname(settings.server.output));\n\n\t// Output \"*.map\" file for human-readable stack traces\n\tconfiguration.devtool = 'source-map';\n\n\t// https://webpack.github.io/docs/configuration.html#externals\n\t//\n\t// `externals` allows you to specify dependencies for your library\n\t// that are not resolved by webpack, but become dependencies of the output.\n\t// This means they are imported from the environment during runtime.\n\t//\n\t// So that Webpack doesn't bundle \"node_modules\" into server.js.\n\n\tconfiguration.externals = configuration.externals || [];\n\n\tif (!Array.isArray(configuration.externals)) {\n\t\tconfiguration.externals = [configuration.externals];\n\t}\n\n\tconfiguration.externals.push(function (context, request, callback) {\n\t\tif (is_external(request, configuration, settings)) {\n\t\t\t// Resolve dependency as external\n\t\t\treturn callback(null, request);\n\t\t}\n\n\t\t// Resolve dependency as non-external\n\t\treturn callback();\n\t});\n\n\t// Replace `style-loader` and `css-loader` with `css-loader/locals`\n\t// since it's no web browser and no files will be emitted.\n\treplace_style_loader(configuration);\n\n\t// Add `emit: false` flag to `file-loader` and `url-loader`,\n\t// since there's no need out emit files on the server side\n\t// (can just use the assets emitted on client build\n\t//  since the filenames are the same)\n\tdont_emit_file_loader(configuration);\n\n\tconfiguration.plugins = configuration.plugins || [];\n\n\t// Remove HotModuleReplacementPlugin and CommonsChunkPlugin\n\tconfiguration.plugins = configuration.plugins.filter(function (plugin) {\n\t\treturn plugin.constructor !== _webpack2.default.HotModuleReplacementPlugin && plugin.constructor !== _webpack2.default.optimize.CommonsChunkPlugin;\n\t});\n\n\t// Add a couple of utility plugins\n\tconfiguration.plugins = configuration.plugins.concat(\n\t// Resorted from using it here because\n\t// if the `build/server` folder is not there\n\t// when Nodemon starts then it simply won't detect\n\t// updates of the server-side bundle\n\t// and therefore won't restart on code changes.\n\t//\n\t// `build/server` folder needs to be present\n\t// by the time Nodemon starts,\n\t// and that's accomplished with a separate npm script.\n\n\t// // Cleans the output folder\n\t// new clean_plugin([path.dirname(settings.server.output)],\n\t// {\n\t// \troot: configuration.context\n\t// }),\n\n\t// Put the resulting Webpack compiled code into a sigle javascript file\n\t// (doesn't disable CommonsChunkPlugin)\n\tnew _webpack2.default.optimize.LimitChunkCountPlugin({ maxChunks: 1 }));\n\n\t// Done\n\treturn configuration;\n}\n\n// Checks if a require()d dependency is external\nfunction is_external(request, webpack_configuration, settings) {\n\t// If someone finds a way to mark all assets (jpg, png, css, scss)\n\t// as not external then create a Pull Request on github.\n\t// Until then, all assets from `node_modules` have to be specified\n\t// inside `exclude_from_externals` configuration parameter.\n\n\t// Mark all files inside packages (e.g. `node_modules`) as external.\n\n\tvar package_name = extract_package_name(request);\n\n\t// Skip webpack loader specific require()d paths\n\t// https://webpack.github.io/docs/loaders.html\n\tif ((0, _helpers.starts_with)(package_name, '!') || (0, _helpers.starts_with)(package_name, '-!')) {\n\t\t// The dependency is not external\n\t\treturn false;\n\t}\n\n\t// If it's not a module require call,\n\t// then resolve it as non-external.\n\t//\n\t// https://github.com/npm/validate-npm-package-name\n\t//\n\tif (!(0, _validateNpmPackageName2.default)(package_name).validForNewPackages) {\n\t\t// The dependency is not external\n\t\treturn false;\n\t}\n\n\t// If any aliases are specified, then resolve those aliases as non-external\n\tif (webpack_configuration.resolve && webpack_configuration.resolve.alias) {\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = (0, _getIterator3.default)((0, _keys2.default)(webpack_configuration.resolve.alias)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar alias = _step.value;\n\n\t\t\t\t// if (request === key || starts_with(request, key + '/'))\n\t\t\t\tif (package_name === alias) {\n\t\t\t\t\t// The module is not external\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Allows camelCasing\n\tvar exclude_from_externals = settings.exclude_from_externals || settings.excludeFromExternals;\n\n\t// Skip modules explicitly ignored by the user\n\tif (exclude_from_externals) {\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = (0, _getIterator3.default)(exclude_from_externals), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar exclusion_pattern = _step2.value;\n\n\t\t\t\tvar regexp = exclusion_pattern;\n\n\t\t\t\tif (typeof exclusion_pattern === 'string') {\n\t\t\t\t\tif (request === exclusion_pattern || (0, _helpers.starts_with)(request, exclusion_pattern + '/')) {\n\t\t\t\t\t\t// The module is not external\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (exclusion_pattern instanceof RegExp) {\n\t\t\t\t\tif (regexp.test(request)) {\n\t\t\t\t\t\t// The module is not external\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Invalid exclusion pattern: ' + exclusion_pattern + '. Only strings and regular expressions are allowed.');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// The module is external\n\treturn true;\n}\n\n// Adds `emitFile: false` flag to `file-loader` and `url-loader`,\n// since there's no need out emit files on the server side\n// (can just use the assets emitted on client build\n//  since the filenames are the same)\nfunction dont_emit_file_loader(configuration) {\n\tvar _iteratorNormalCompletion3 = true;\n\tvar _didIteratorError3 = false;\n\tvar _iteratorError3 = undefined;\n\n\ttry {\n\t\tfor (var _iterator3 = (0, _getIterator3.default)(configuration.module.rules), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\tvar rule = _step3.value;\n\n\t\t\t(0, _loaders.normalize_rule_loaders)(rule);\n\n\t\t\tvar file_loader = rule.use.filter((0, _loaders.loader_name_filter)('file'))[0];\n\t\t\tvar url_loader = rule.use.filter((0, _loaders.loader_name_filter)('url'))[0];\n\n\t\t\tif (file_loader && url_loader) {\n\t\t\t\tthrow new Error('You have both \"url-loader\" and \"file-loader\" defined for rule which makes no sense', _util2.default.inspect(rule));\n\t\t\t}\n\n\t\t\tvar loader = file_loader || url_loader;\n\n\t\t\tif (loader) {\n\t\t\t\tloader.options = loader.options || {};\n\t\t\t\tloader.options.emitFile = false;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError3 = true;\n\t\t_iteratorError3 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t_iterator3.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError3) {\n\t\t\t\tthrow _iteratorError3;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Replaces `style-loader` and `css-loader` with `css-loader/locals`\n// since it's no web browser and no files will be emitted.\nfunction replace_style_loader(configuration) {\n\tvar _iteratorNormalCompletion4 = true;\n\tvar _didIteratorError4 = false;\n\tvar _iteratorError4 = undefined;\n\n\ttry {\n\t\tfor (var _iterator4 = (0, _getIterator3.default)((0, _loaders.find_style_rules)(configuration)), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\tvar rule = _step4.value;\n\n\t\t\t(0, _loaders.normalize_rule_loaders)(rule);\n\n\t\t\t// Replace `css-loader` with `css-loader/locals`.\n\t\t\t// Remove `style-loader`.\n\t\t\tvar css_loader = rule.use.filter((0, _loaders.loader_name_filter)('css'))[0];\n\n\t\t\tif (css_loader) {\n\t\t\t\tcss_loader.loader = 'css-loader/locals';\n\t\t\t\trule.use = rule.use.filter(function (loader) {\n\t\t\t\t\treturn !(0, _loaders.loader_name_filter)('style')(loader);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError4 = true;\n\t\t_iteratorError4 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t_iterator4.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError4) {\n\t\t\t\tthrow _iteratorError4;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Extracts npm package name.\n// Correctly handles \"private\" npm packages like `@namespace/package`.\nfunction extract_package_name(path) {\n\tif (path.indexOf('/') === -1) {\n\t\treturn path;\n\t}\n\n\t// For regular npm packages\n\tvar package_name = path.slice(0, path.indexOf('/'));\n\n\t// Handle \"private\" npm packages\n\tif (package_name[0] === '@') {\n\t\tvar start_from = package_name.length + '/'.length;\n\t\tvar to = path.indexOf('/', start_from);\n\n\t\tif (to >= 0) {\n\t\t\tpackage_name += path.slice(start_from - '/'.length, to);\n\t\t} else {\n\t\t\tpackage_name = path;\n\t\t}\n\t}\n\n\treturn package_name;\n}\n//# sourceMappingURL=server configuration.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/server.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.default = server;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _waitForFile = require('./wait for file');\n\nvar _waitForFile2 = _interopRequireDefault(_waitForFile);\n\nvar _chunks = require('./chunks');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction server(webpack_configuration, settings) {\n\t// if (!webpack_configuration.context)\n\t// {\n\t// \tthrow new Error(`You must set \"context\" parameter in your Webpack configuration`)\n\t// }\n\n\t// Path to `build/server.js`\n\t// (built by Webpack)\n\tvar server_bundle_path = _path2.default.resolve(webpack_configuration.context || process.cwd(), settings.server.output);\n\n\tvar chunk_info_json_file_path = (0, _chunks.chunk_info_file_path)(webpack_configuration, settings.chunk_info_filename);\n\n\t// waits for the first Webpack server-side build to finish and produce `webpage_rendering_server.js`\n\treturn (0, _waitForFile2.default)(server_bundle_path).then(function () {\n\t\treturn (0, _waitForFile2.default)(chunk_info_json_file_path);\n\t}).then(function () {\n\t\t// Will be passed to the server code\n\t\tvar additional = {\n\t\t\tconfiguration: webpack_configuration,\n\n\t\t\tchunks: function chunks() {\n\t\t\t\t// Just in case `nodemon` was not set up to watch and\n\t\t\t\t// restart the Node.js process on bundle rebuild,\n\t\t\t\t// clear Webpack require() cache for hot reload in development mode.\n\t\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\t\tdelete require.cache[chunk_info_json_file_path];\n\t\t\t\t}\n\n\t\t\t\t// In production mode `require()` cache will be in effect\n\t\t\t\treturn require(chunk_info_json_file_path);\n\t\t\t}\n\t\t};\n\n\t\t// Start webpage rendering server\n\t\t// (this module will be compiled by Webpack server-side build from './source/server.js')\n\n\t\tvar starter = require(server_bundle_path);\n\n\t\t// Fixing Babel `module.exports.default` issues\n\n\t\tif (typeof starter === 'function') {\n\t\t\treturn starter(additional);\n\t\t}\n\n\t\tif (typeof starter.default === 'function') {\n\t\t\treturn starter.default(additional);\n\t\t}\n\n\t\tvar stringified_starter = String(starter);\n\t\tif (stringified_starter === '[object Object]') {\n\t\t\tstringified_starter = (0, _stringify2.default)(starter, null, 2);\n\t\t}\n\n\t\tthrow new Error('[universal-webpack] Your server source file must export a function. ' + ('Got ' + _util2.default.inspect(starter)));\n\t}).catch(function (error) {\n\t\t// bright red color\n\t\tconsole.log(\"\\x1b[1m\\x1b[31m\");\n\n\t\t// Output the error stack trace\n\t\tconsole.error('\\n' + (error.stack || error));\n\n\t\t// reset color and brightness\n\t\tconsole.log('\\x1b[39m\\x1b[22m');\n\n\t\t// exit with non-zero exit code (indicating that an error happened)\n\t\tprocess.exit(1);\n\t});\n}\n//# sourceMappingURL=server.js.map","/home/travis/build/npmtest/node-npmtest-universal-webpack/node_modules/universal-webpack/es6/wait for file.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nexports.default = wait_for_file;\nexports.fs_exists = fs_exists;\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Waits for `build/server.js` to be created\n// after Webpack build process finishes.\n//\n// The Promise is resolved when `build/server.js` has been found\n// (this is needed for development because `webpack-dev-server`\n//  and your Node.js application server are run in parallel,\n//  and are restarted simultaneously).\n//\nfunction wait_for_file(path) {\n\tvar _this = this;\n\n\t// waits for condition to be met, then resolves the promise\n\treturn new _promise2.default(function (resolve) {\n\t\tvar tick_interval = 300;\n\n\t\t// show the message not too often\n\t\tvar message_timer = 0;\n\t\tvar message_interval = 2000; // in milliseconds\n\n\t\ttick((0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {\n\t\t\tvar exists, contents;\n\t\t\treturn _regenerator2.default.wrap(function _callee$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t_context.next = 2;\n\t\t\t\t\t\t\treturn fs_exists(path);\n\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\texists = _context.sent;\n\n\t\t\t\t\t\t\tif (exists) {\n\t\t\t\t\t\t\t\t_context.next = 5;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn _context.abrupt('return', false);\n\n\t\t\t\t\t\tcase 5:\n\n\t\t\t\t\t\t\t// Check if the file contents have been written to disk\n\t\t\t\t\t\t\t// https://github.com/halt-hammerzeit/universal-webpack/issues/24\n\t\t\t\t\t\t\tcontents = _fs2.default.readFileSync(path, 'utf8');\n\n\t\t\t\t\t\t\t// Check if the file contents is empty\n\n\t\t\t\t\t\t\tif (contents) {\n\t\t\t\t\t\t\t\t_context.next = 8;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn _context.abrupt('return', false);\n\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn _context.abrupt('return', true);\n\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, _callee, _this);\n\t\t})), tick_interval, resolve, function () {\n\t\t\tmessage_timer += tick_interval;\n\n\t\t\tif (message_timer >= message_interval) {\n\t\t\t\tmessage_timer = 0;\n\n\t\t\t\tconsole.log('(\"' + path + '\" not found)');\n\t\t\t\tconsole.log('(waiting for Webpack build to finish)');\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction tick(check_condition, interval, done, not_done_yet) {\n\tcheck_condition().then(function (condition_is_met) {\n\t\tif (condition_is_met) {\n\t\t\treturn done();\n\t\t}\n\n\t\tnot_done_yet();\n\n\t\tsetTimeout(function () {\n\t\t\treturn tick(check_condition, interval, done, not_done_yet);\n\t\t}, interval);\n\t});\n}\n\n// Checks if a filesystem path exists.\n// Returns a promise\nfunction fs_exists(path) {\n\treturn new _promise2.default(function (resolve, reject) {\n\t\t_fs2.default.exists(path, function (exists) {\n\t\t\treturn resolve(exists);\n\t\t});\n\t});\n}\n//# sourceMappingURL=wait for file.js.map"}